DBUS commands 

Send signal using dbus-send
dbus-send --system --type=signal object_path interface_name.signal_name
Ex: 

busctl tree dbus_servicename
Ex: busctl tree xyz.openbmc_project.EntityManager 
`-/xyz
  `-/xyz/openbmc_project
    |-/xyz/openbmc_project/EntityManager
    `-/xyz/openbmc_project/inventory
      `-/xyz/openbmc_project/inventory/system
        `-/xyz/openbmc_project/inventory/system/bmc


busctl introspect  dbus_servicename dbus_object_path 
Ex: busctl introspect  xyz.openbmc_project.EntityManager  /xyz/openbmc_project/EntityManager
NAME                                TYPE      SIGNATURE RESULT/VALUE FLAGS
org.freedesktop.DBus.Introspectable interface -         -            -
.Introspect                         method    -         s            -
org.freedesktop.DBus.Peer           interface -         -            -
.GetMachineId                       method    -         s            -
.Ping                               method    -         -            -
org.freedesktop.DBus.Properties     interface -         -            -
.Get                                method    ss        v            -
.GetAll                             method    s         a{sv}        -
.Set                                method    ssv       -            -
.PropertiesChanged                  signal    sa{sv}as  -            -
xyz.openbmc_project.EntityManager   interface -         -            -
.ReScan                             method    -         -            -


busctl get-property   dbus_servicename dbus_object_path  interfacename property
Ex: busctl get-property   xyz.openbmc_project.Control.Host /xyz/openbmc_project/control/host0   xyz.openbmc_project.Condition.HostFirmware CurrentFirmwareCondition 
s "xyz.openbmc_project.Condition.HostFirmware.FirmwareCondition.Off"


busctl set-property   dbus_servicename dbus_object_path  interfacename property
Ex: busctl set-property   xyz.openbmc_project.Control.Host /xyz/openbmc_project/control/host0   xyz.openbmc_project.Condition.HostFirmware CurrentFirmwareCondition  s "xyz.openbmc_project.Condition.HostFirmware.FirmwareCondition.Off"

busctl call  dbus_servicename dbus_object_path  interfacename method_name signature <params>
Ex: 


busctl command to get the dbus objects implementig particular dbus interface xyz.openbmc_project.Software.Version
dbus-send --system --print-reply \
--dest=dbus_servicename \
dbus_object_path \
interfacename method_name \
signature

dbus-send --system --print-reply \
--dest=xyz.openbmc_project.ObjectMapper \
/xyz/openbmc_project/object_mapper \
xyz.openbmc_project.ObjectMapper.GetSubTree \
string:"/" int32:0 array:string:"xyz.openbmc_project.Software.Version"

dbus call to get dbus obj paths implementing interface xyz.openbmc_project.Inventory.Item.Chassis
dbus-send --system --print-reply \
--dest=xyz.openbmc_project.ObjectMapper \
/xyz/openbmc_project/object_mapper \
xyz.openbmc_project.ObjectMapper.GetSubTreePaths \
string:"/" int32:0 array:string:"xyz.openbmc_project.Inventory.Item.Chassis"

dbu call to get all properties of a dbus object path under specific dbus service
dbus-send --system --print-reply --dest=xyz.openbmc_project.User.Manager /xyz/openbmc_project/user/root org.freedesktop.DBus.Properties.GetAll  string:""

Get endpoints of Association
busctl get-property xyz.openbmc_project.ObjectMapper dbus_obj_path/<forward_assoc>  xyz.openbmc_project.Association endpoints
as 1 "/xyz/openbmc_project/software/HGX_FW_BMC_0"
Ex: busctl get-property xyz.openbmc_project.ObjectMapper /xyz/openbmc_project/software/functional  xyz.openbmc_project.Association endpoints
as 1 "/xyz/openbmc_project/software/HGX_FW_BMC_0"


Conventional name	ASCII type-code	Encoding
BYTE	y (121)	Unsigned 8-bit integer
BOOLEAN	b (98)	Boolean value: 0 is false, 1 is true, any other value allowed by the marshalling format is invalid
INT16	n (110)	Signed (two's complement) 16-bit integer
UINT16	q (113)	Unsigned 16-bit integer
INT32	i (105)	Signed (two's complement) 32-bit integer
UINT32	u (117)	Unsigned 32-bit integer
INT64	x (120)	Signed (two's complement) 64-bit integer (mnemonic: x and t are the first characters in "sixty" not already used for something more common)
UINT64	t (116)	Unsigned 64-bit integer
DOUBLE	d (100)	IEEE 754 double-precision floating point
UNIX_FD	h (104)	Unsigned 32-bit integer representing an index into an out-of-band array of file descriptors, transferred via some platform-specific mechanism (mnemonic: h for handle)


